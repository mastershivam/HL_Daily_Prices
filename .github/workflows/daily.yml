name: Daily HL Portfolio Run

on:
  schedule:
    - cron: "0 7 * * *"  # Runs every day at 07:00 UTC
  workflow_dispatch:      # Allows manual runs too

jobs:
  run-script:
    runs-on: ubuntu-latest
    env:
      LC_ALL: en_GB.UTF-8
      LANG: en_GB.UTF-8
      DEBUG: false
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Fetch private data repo
        env:
          GH_PAT: ${{ secrets.DATA_REPO_TOKEN }}
        run: |
          git clone https://x-access-token:${GH_PAT}@github.com/mastershivam/HL_Daily_Prices_Data.git
          cp HL_Daily_Prices_Data/units.csv units.csv

      - name: Seed existing history into workspace (if present)
        run: |
          if [ -f HL_Daily_Prices_Data/outputs/daily_totals.csv ]; then
            cp HL_Daily_Prices_Data/outputs/daily_totals.csv daily_totals.csv
            echo "Seeded local daily_totals.csv with history from data repo"
          else
            echo "No historical daily_totals.csv found in data repo; starting fresh"
          fi

      - name: Run script
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.EMAIL_APP_PASSWORD }}
          EMAIL_FROM: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_TO: ${{ secrets.EMAIL_RECIPIENTS}}
        run: python main.py

      - name: Upload outputs as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hl-daily-outputs-${{ github.run_id }}
          path: |
            daily_totals.csv
            summaries/latest.html
          if-no-files-found: warn

      - name: Commit outputs back to private data repo
        if: always()
        env:
          GH_PAT: ${{ secrets.DATA_REPO_TOKEN }}
        run: |
          set -e
          cd HL_Daily_Prices_Data
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          mkdir -p outputs
          cp ../daily_totals.csv outputs/daily_totals.csv
          # Optionally keep latest HTML summary
          mkdir -p outputs/summaries
          if [ -f ../summaries/latest.html ]; then cp ../summaries/latest.html outputs/summaries/latest.html; fi
          git add -f outputs/daily_totals.csv outputs/summaries/latest.html || true
          if ! git diff --cached --quiet; then
            git commit -m "Update outputs: daily_totals.csv and latest.html (run ${{ github.run_id }})"
            git push origin HEAD
          else
            echo "No changes to commit in data repo"
          fi
